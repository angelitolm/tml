<?php

namespace AppBundle\Entity\Repositories;
use AppBundle\Entity\Course;
use Doctrine\ORM\QueryBuilder;

/**
 * CourseRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CourseRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param Course $entity
     */
    public function update(Course $entity)
    {
        $this->_em->persist($entity);
        $this->_em->flush();
    }

    /**
     * @param Course $entity
     */
    public function remove(Course $entity)
    {
        $this->_em->remove($entity);
        $this->_em->flush();
    }

    /**
     * @param int $start
     * @param int $limit
     * @param array $order
     * @param string $filter
     * @return array
     */
    public function datableElement($start = 0, $limit = 10, $order = array(), $filter ='')
    {
        $query = $this->createQueryBuilder('course');
        $query->setFirstResult($start);
        $query->setMaxResults($limit);
        if(!empty($order)) {
            $query->addOrderBy('course.name',$order['dir']);
        }

        if(!empty($filter)) {
            $query = $this->addQueryFilter($query, $filter);
        }

        return $query->getQuery()->getResult();
    }

    /**
     * @return mixed
     */
    public function getCountTotal()
    {
        $query = $this->createQueryBuilder('course');
        $query->select($query->expr()->count('course.id'));

        return $query->getQuery()->getSingleScalarResult();
    }

    /**
     * @param $filter
     * @return mixed
     */
    public function getFilterTotal($filter)
    {
        $query = $this->createQueryBuilder('course');
        $query->select($query->expr()->count('course.id'));
        if(!empty($filter)) {
            $query = $this->addQueryFilter($query, $filter);
        }

        return $query->getQuery()->getSingleScalarResult();
    }

    /**
     * @param QueryBuilder $query
     * @param $filter
     * @return QueryBuilder
     */
    private function addQueryFilter(QueryBuilder $query, $filter)
    {
        $expr = $query->expr();
        $query->orWhere($expr->like('course.name',':filter_str'));
        $query->orWhere($expr->like('course.description',':filter_str'));
        $query->setParameter('filter_str', '%'.$filter.'%');
        return $query;
    }

}
