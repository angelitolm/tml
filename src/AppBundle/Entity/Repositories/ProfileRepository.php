<?php

namespace AppBundle\Entity\Repositories;
use AppBundle\Entity\Profile;

/**
 * ProfileRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProfileRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param Profile $entity
     */
    public function update(Profile $entity)
    {
        $this->_em->persist($entity);
        $this->_em->flush();
    }

    /**
     * @param Profile $entity
     */
    public function remove(Profile $entity)
    {
        $this->_em->remove($entity);
        $this->_em->flush();
    }

    /**
     * @param $sponsor
     * @param $start
     * @param $end
     * @return array
     * @throws \Doctrine\ORM\ORMException
     */
    public function countRegisterByRange($sponsor, $start, $end) {
        $config = $this->_em->getConfiguration();
        $config->addCustomDatetimeFunction('EXTRACT','AppBundle\Query\AST\MysqlExtract');

        $query = $this->createQueryBuilder('profile');
        $query
            ->select($query->expr()->count('profile.id'))
            ->addSelect("EXTRACT(YEAR_MONTH FROM profile.created) as yearMonth")
            ->where($query->expr()->eq('profile.sponsor',':sponsor'))
            ->andWhere($query->expr()->between('profile.created',":start",":end"))
            ->andWhere($query->expr()->eq('profile.active',':active'))
            ->andWhere($query->expr()->eq('profile.blocked',':blocked'))
            ->groupBy("yearMonth")
            ->setParameter('sponsor', $sponsor)
            ->setParameter('start',$start)
            ->setParameter('end', $end)
            ->setParameter('active', true)
            ->setParameter('blocked', false)
        ;

        return $query->getQuery()->getResult();
    }

    /**
     * @param $newProfile
     * @param null $oldProfile
     * @return bool
     */
    public function updateChildrenSponsor($newProfile, $oldProfile = null) {
        if(null !== $oldProfile) {
            $query = $this->createQueryBuilder('profile');
            $query
                ->update()
                ->set('profile.sponsor', ':newProfile')
                ->where($query->expr()->eq('profile.sponsor',':oldProfile'))
                ->andWhere($query->expr()->eq('profile.active',':active'))
                ->andWhere($query->expr()->eq('profile.blocked',':blocked'))
                ->setParameter('newProfile', $newProfile)
                ->setParameter('oldProfile', $oldProfile)
                ->setParameter('active', true)
                ->setParameter('blocked', false)
            ;
            $query->getQuery()->execute();
            return true;
        }
        return false;
    }
}
